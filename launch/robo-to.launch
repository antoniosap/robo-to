<launch>

    <!-- specify the planning pipeline -->
    <arg name="pipeline" default="ompl"/>
    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false"/>

    <node pkg="joy" name="saitek_joy" type="joy_node"/>

    <arg name="cmd_vel" default="input_joy/cmd_vel"/>
    <arg name="teleop_config" default="$(find robo-to)/config/joy_teleop.yaml"/>

    <rosparam file="$(arg teleop_config)" command="load"/>
    <node pkg="joy_teleop" name="joy_teleop" type="joy_teleop.py" >
        <remap from="cmd_vel" to="$(arg cmd_vel)"/>
    </node>

    <!--
        questo ha un movimento hard coded
        <node pkg="robo-to" name="robo_to" type="pan_tilt_calibration_controller.py" output="screen"/>
    -->

    <!--
        MoveIt movement manager
    -->
    <node pkg="robo-to" name="pan_tilt_moveit_base_pc" type="pan_tilt_moveit_base_pc.py" output="screen"/>
    <node pkg="robo-to" name="pan_tilt_message_adapter" type="pan_tilt_message_adapter.py" output="screen"/>

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <!--
    <include file="$(find robo-to-moveit_pan_tilt_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="fake_execution" value="true"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="pipeline" value="$(arg pipeline)"/>
    </include>
    -->

    <include file="$(find robo-to-moveit_pan_tilt_config)/launch/demo.launch"/>

    <!--
    <include file="$(find robo-to-moveit_pan_tilt_config)/launch/ros_controllers.launch"/>
    -->
    <!--
    <include file="$(find robo-to-moveit_pan_tilt_config)/launch/pan_tilt_moveit_controller_manager.launch.xml"/>
    -->
</launch>